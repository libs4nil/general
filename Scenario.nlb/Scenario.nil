// License Information:
// Scenario.nlb/Scenario.nil
// Scenario Parser
// version: 19.07.28
// Copyright (C)  Jeroen P. Broks
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
// 1. The origin of this software must not be misrepresented; you must not
// claim that you wrote the original software. If you use this software
// in a product, an acknowledgment in the product documentation would be
// appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
// misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.
// End License Information

// This is just a translation from Lua to NIL for better integration.


//-- $USE libs/qgfx
#use 'libs/strings'

//local scen={}

table portret //= {} //scen.portret=portret
table btdata //= {} //scen.btdata=btdata

void RemoveData(string file) 
	btdata = btdata or {} 
	btdata[file] = nil; 
end

class ScenRec
	string Header
	string PicDir
	string PicSpc
	string AltTxtFont
	string SoundFile
	table Lines
end	

void ProcessBLine(Rec,string Prefix,string DLine)
	switch Prefix

		case "ERROR"
			error("Unknown scenario prefix") 			
		case "!"
		 	Rec.Header = DLine 
		case "*"
			Rec.PicDir = DLine
		case ":"
			Rec.PicSpc = DLine
		case "%"
			// Dummied old line, as this is also referring to .ttf files.
			// BlitzMax could read them, but MonoGame cannot.
			// ["%"] = function(Rec,DLine) Rec.AltTxtFont = "Fonts/"..DLine..".ttf"; CSay("Font: "..DLine)  end, -- Alternate font
			Rec.AltTxtFont = "Fonts/"..DLine..".ttf"
		case "#"
			table.insert(Rec.Lines,DLine)
		case "$"
			Rec.SoundFile = DLine
		case "-"
			// Nothing here
		default
			error("Unknown scenario prefix - "..Prefix)
	end
end

int len(a) 
	return #a 
end

//local Image = { -- Faking the original GALE module qith the qgfx routines
//   Exists = ImageLoaded,
//   Exist = ImageLoaded,
//   AssignLoad = LoadImage   
//}
//private 
group Image
	delegate Exists
	get var Exist
		return self.Exists
	end
	set var Exist
		self.Exists = value
	end
	delegate AssignLoad
	delegate Loaded
end


//private 
group scen

	// Done to make multi-engine stuff possible.
	link ImageExists = Image.Exists
	link ImageLoad = Image.Load

	link portret = portret
	link btdata = btdata
	link RemoveData = RemoveData
	link Loaded = Image.Loaded
	
	// Must be set before usage
	string lang
	
	// Must be set before usage
	delegate JCR_Lines
	delegate JCR_Exists
	
	string audioext
	void CONSTRUCTOR()
		self.audioext = "wav"
	end

	table LoadData(string file,loadas,merge)
		assert(scen.lang!="","scenario.lang has not been set!")
		assert(scen.JCR_Lines,"scenario.JCR_Lines has not been set!")
		assert(scen.JCR_Exists,"scenario.JCR_Exists has not been set!")
		string lang
		lang = scen.lang
		int LineNumber
		string Line

		string crap 
		crap = scen.JCR_Lines('Scenario/'..lang.."/"..file)
		table ret
		string section 
		section = "[rem]"
		string L
		string Prefix
		string DLine
		var WorkRec

		if merge then ret = btdata[loadas or file] or {} end 
		// CSay("Loading BoxText Data: "..file)
		for LineNumber,Line in ipairs(crap) do
			L = trim(Line)
			if L!="" 
				if left(L,1)=="[" and right(L,1=="]")
					section = L
				else
					switch section
						case '[rem]'
						case '[tags]'
							ret[L] = {}
						case '[scenario]'
							Prefix = left(L,1)
							DLine = right(L,len(L)-1)             
							if (not WorkRec) and Prefix~="@" and Prefix~="-" then error("Trying to assign data, while no boxtext record has yet been created in line #"..LineNumber) end
							if Prefix=="@" then
								WorkRec = new ScenRec
								//{ Lines = {}, Header="", PicDir="", PicSpc="", SoundFile="" }
								table.insert(ret[DLine],WorkRec)                
							elseif #L>1 then
								ProcessBLine(WorkRec,Prefix,DLine)   
							end
						default
							error("Unknown language section: "..section.." in line #"..LineNumber)   
					end
				end
			end
		end
		
		// Load Images
		//local k,i,tag,rec // Lua uses none of them, but I didn't know that when I wrote this code first... :P
		string picfile
		string picref
		for k,tag in pairs(ret) do 
			for i,rec in pairs(tag) do
				picfile = "GFX/Portret/"..rec.PicDir.."/"..rec.PicSpc..".png"
				//--print('picfile',picfile)
				picref = string.upper(rec.PicDir).."."..string.upper(rec.PicSpc)
				if (not Image.Loaded(picref)) and scen.JCR_Exists(picfile) then 
					var ti
					ti = Image.AssignLoad(picfile,picref) 
					portret[picref]=true 
					if CSay
						CSay('Loaded '..picfile..' on '..picref.." (BoxText)") 
					end // if CSay
					if not Image.Loaded(picref) then 
						if CSay
							CSay("= FAILED!") 
						end
					end
					if not ti then 
						if CSay
							CSay("= NIL RETURNED") 
						end
					end
				elseif Image.Exist(picref) then
					portret[picref]=true
				end
				if portret[picref] then rec.PicRef=picref; end 
			end
		end

		//-- Auto Tie Sound Files
		for k,tag in pairs(ret) do 
			for i,rec in pairs(tag) do
				if self.JCR_Exists("VOCALS/"..file.."/"..k.."_"..i.."."..self.audioext) then 
					rec.SoundFile = "Vocals/"..file.."/"..k.."_"..i.."."..self.audioext 
					if CSay then CSay("Got sound for "..k.." #"..i) end
				else
					//-- CSay("no sound for "..k.." #"..i.."   (VOCALS/"..file.."/"..k.."_"..i..".ogg)",255,0,0) -- Only annoying. Can be unremmed if needed (which I doubt).  
				end
			end 
		end     
		// -- closure
		btdata[loadas or file] = ret    
		//-- print(serialize("btdata",btdata)) -- Debug Line, must be on rem in release
		return ret
	end
	
end

return scen

